
Техническая информация:
	- Версия Vanessa-ADD: 6.8.0
	- Имя конфигурации: КомплекснаяАвтоматизация
	- Синоним конфигурации: 1С:Комплексная автоматизация 2 + Модуль 1C:CRM 3
	- Версия конфигурации: 2.4.6.189
	- Платформа 1С: 8.3.20.1674
	- Тип базы: Клиент-серверная ИБ
	- Режим запуска: Управляемое приложение (Тонкий клиент)
	- Режим совместимости (для TestManager): Версия8_3_17
	- Режим совместимости интерфейса (для TestManager): ТаксиРазрешитьВерсия8_2
 	- Режим синхронности: включен
 	- Защита от опасных действий: выключен
	- Язык (для TestManager): Русский
	- Локализация (для TestManager): ru_RU
	- Операционная система (клиент): Windows x86-64 Microsoft Windows 10 version 10.0  (Build 19043)
	- Операционная система (сервер): Windows x86-64 Microsoft Windows 10 version 10.0  (Build 14393)
	- Активные расширения:


.  ==>> набор тестов C:\Users\daneliya.n\ProjConf\tests\smoke - <Данелия_Наталья>

.  ==>> набор тестов Тесты "Проверка периодичности нумерации документов" - <Данелия_Наталья>

.  ==>> набор тестов УпрФорма # Тесты_ПроверкаПериодичностиНумерацииДокументов - <Данелия_Наталья>

.  ==>> набор тестов Документы - <Данелия_Наталья>
.    -->> тест Документ.ЗаказПереработчику [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистраторРасчетов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.РегистраторРасчетов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.РаботаСверхурочно [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СчетФактураВыданный [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПеремещениеМатериаловВПроизводстве [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_УслугиАвтомойки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_УслугиАвтомойки" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.РассылкаКлиентам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.РассылкаКлиентам" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИнвентаризацияПродукцииВЕТИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ИнвентаризацияПродукцииВЕТИС" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УдалитьЗаявлениеАбонентаСпецоператораСвязи [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УдалитьЗаявлениеАбонентаСпецоператораСвязи" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УтверждениеШтатногоРасписания [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДопЛистКнигиПокупокДляПередачиВЭлектронномВиде [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПереносДанных [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПродлениеКонтрактаДоговора [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НазначениеПодработки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрацияНаработок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.РегистрацияНаработок" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УдалитьЗапросНаИнформационноеОбслуживаниеНалогоплательщика [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УдалитьЗапросНаИнформационноеОбслуживаниеНалогоплательщика" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЗапросСкладскогоЖурналаВЕТИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗапросСкладскогоЖурналаВЕТИС" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПрекращениеПлановогоНачисления [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_Заявка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.CRM_Заявка" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.СчетНаОплатуКлиенту [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПередачаМатериаловВПроизводство [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗаявкаНаРегистрациюСкидки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеПринятыхНаХранениеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_ПланированиеВоронкиПродаж [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.CRM_ПланированиеВоронкиПродаж" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПодтверждениеОткрытияЛицевыхСчетовСотрудников [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УдалитьПроизвольныйЭД [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗакрытиеЗапроса [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АмортизацияОС2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.АмортизацияОС2_4" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПоступлениеОтПереработчика [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеНДСНаРасходы [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеОплатыТруда [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СА_ОперацияСРеестром [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктОРасхожденияхПослеПеремещения [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПеремещениеВЭксплуатации [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ЗакрытиеРезервов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_ЗакрытиеРезервов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.КорректировкаПоОрдеруНаТовары [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РасходныйОрдерНаТовары [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_РеестрСчфактур [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_РеестрСчфактур" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УдержаниеДобровольныхСтраховыхВзносов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПрочееОприходованиеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УдалитьЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УдалитьЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.LAD_СоглашениеСПоставщиком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявкаНаРасходованиеДенежныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДоговорРаботыУслуги [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПоступлениеБезналичныхДенежныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.МатериальнаяПомощь [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявлениеНаПредоставлениеСтандартныхВычетовПоНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ГрафикОтпусков [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЧекЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УстановкаКвотАссортимента [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СообщениеSMS [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПорчаТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДанныеОКорректировкеСведенийЗастрахованныхЛицСЗВ_КОРР [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ДанныеОКорректировкеСведенийЗастрахованныхЛицСЗВ_КОРР" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЭлектронныйДокументВходящий [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЭлектронныйДокументВходящий" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИсполнительныйЛист [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтчетОРозничныхПродажах [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ЗаявкаНаДоверенность [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_ЗаявкаНаДоверенность" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВводОстатковВнеоборотныхАктивов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаказНаСборку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИнвентаризацияРасчетов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СведенияОСтраховомСтажеЗастрахованныхЛицСЗВ_СТАЖ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.СведенияОСтраховомСтажеЗастрахованныхЛицСЗВ_СТАЖ" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПринятиеКУчетуНМА [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗавершениеПлатногоХраненияТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_НачислениеБонусаПоБонуснойПрограммеДляПокупателей [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_НачислениеБонусаПоБонуснойПрограммеДляПокупателей" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ТаможеннаяДекларацияЭкспорт [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ТаможеннаяДекларацияЭкспорт" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВыкупВозвратнойТарыУПоставщика [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаДокументовДСВ_1 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.Командировка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПринятиеКУчетуОС2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РаспределениеОсновногоЗаработка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПередачаОСАрендатору2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗаявкаНаСозданиеПроекта [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_ЗаявкаНаСозданиеПроекта" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УдержаниеВСчетРасчетовПоПрочимОперациям [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РеализацияУслугПрочихАктивов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НачислениеОценочныхОбязательствПоОтпускам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.Совмещение [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УстановкаБлокировокЯчеек [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПростойСотрудников [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрацияЦенНоменклатурыПоставщика [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ВнутреннийЗаказ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеИзЭксплуатации [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_УчастникРетроБонуса [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_УчастникРетроБонуса" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_УстановкаЛимитовГрузоперевозок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеБезналичныхДенежныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеНМА [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВзаимозачетЗадолженности [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПереносОтпуска [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИнвентаризацияНМА [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КорректировкаНалогообложенияНДСПартийТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.Отпуск [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПриказНаДоплатуДоСреднегоЗаработка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДанныеДляРасчетаЗарплаты [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПогашениеСтоимостиТМЦВЭксплуатации [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОперацияУчетаПоСтраховымВзносам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеПараметровНМА2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПередачаСырьяПереработчику [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтчетКомитентуОСписании [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеПараметровОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявлениеСотрудникаНаВыплатуПособия [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗаявлениеСотрудникаНаВыплатуПособия" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИзменениеПараметровНМА [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОрдерНаОтражениеНедостачТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОрдерНаПеремещениеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НачислениеСписаниеРезервовПредстоящихРасходов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеПараметровОС2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВыбытиеДенежныхДокументов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ПартнерскоеСоглашение [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СогласиеНаОбработкуПерсональныхДанных [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.СогласиеНаОбработкуПерсональныхДанных" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.АвансовыйОтчет [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПогашениеЗадолженностиПоВзысканиям [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПоступлениеДенежныхДокументов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ЗакрытиеВнутреннегоЗаказа [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_ЗакрытиеВнутреннегоЗаказа" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.toledo_НачислениеБонусаПоПартнерскомуСоглашению [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РазукомплектацияОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_РазмещениеТовараНаСкладе [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИнвентаризацияОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ТранспортноеСообщение [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ТранспортноеСообщение" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПодготовкаКПередачеОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КнигаПродажДляПередачиВЭлектронномВиде [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтпускБезСохраненияОплатыСписком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РазовоеНачисление [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтменаРегистрацииЗемельныхУчастков [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_РасчетСтоимостиУслугиНарезкиКабеля [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктПриемкиВыполненныхРаботОказанныхУслуг [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РаспределениеПрочихЗатрат [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ИзменениеСебестоимости [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявкаНаОткрытиеЛицевыхСчетовСотрудников [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИндексацияШтатногоРасписания [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПланОстатков [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПланОстатков" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВозвратИзРегистра2ЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДоговорЗаймаСотруднику [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрацияПереработок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЧекККМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_Протокол [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_Протокол" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.РеестрДанныхЭЛНЗаполняемыхРаботодателем [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЛистокСообщенияДляВоенкомата [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ВозвратТоваровСПлатногоХранения [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаказНаВнутреннееПотребление [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ГарантийноеПисьмо [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_ГарантийноеПисьмо" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ОтчетКомиссионераОСписании [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВыемкаДенежныхСредствИзКассыККМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПересортицаТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.МодернизацияОС2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПереоценкаНМА [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_УстановкаПлановойСебестоимостиНаСделку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_УстановкаПлановойСебестоимостиНаСделку" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УтверждениеТарифнойСетки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КорректировкаРегистров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтменаСовмещения [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КорректировкаИзлишковНедостачПоТоварнымМестам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.КорректировкаИзлишковНедостачПоТоварнымМестам" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПереводКДругомуРаботодателю [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СчетФактураПолученныйАванс [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.СчетФактураПолученныйАванс" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПостоянноеУдержаниеВПользуТретьихЛиц [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВходящаяТранспортнаяОперацияВЕТИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ВходящаяТранспортнаяОперацияВЕТИС" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПланПродажПоКатегориям [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПланПродажПоКатегориям" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УведомлениеОбОтгрузкеМаркированныхТоваровГИСМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗапросНаИнформационноеОбслуживаниеСтрахователя [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗапросНаИнформационноеОбслуживаниеСтрахователя" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВводОстатков [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ВводОстатков" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВозвратОСОтАрендатора [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПереносЗатратНаПерсоналМеждуСтатьями [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СправкиНДФЛДляПередачиВНалоговыйОрган [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПервичныйДокумент [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВозвратТоваровПоставщику [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеСпособаОтраженияИмущественныхНалогов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СчетФактураВыданныйАванс [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ЗаявкаНаИсправлениеРТУ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СведенияОЗастрахованныхЛицахСЗВ_М [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.СведенияОЗастрахованныхЛицахСЗВ_М" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИзменениеУсловийДоговораЗаймаСотруднику [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаказНаПеремещение [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.Отгул [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОрдерНаОтражениеПересортицыТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_Интерес [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КоммерческоеПредложениеКлиенту [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СправкиПоНДФЛДляРасчетаПоНалогуНаПрибыль [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЧекЕГАИСВозврат [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_ЭтапКалендарногоПлана [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АвансовыйПлатежИностранцаПоНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеШтатногоРасписания [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗапросЦеныСрока [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УдалитьCRM_Событие [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РеестрДСВ_3 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВедомостьПрочихДоходовПеречислением [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЭлектронноеПисьмоВходящее [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПередачаВРегистр2ЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОписьЗаявленийСотрудниковНаВыплатуПособий [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ОписьЗаявленийСотрудниковНаВыплатуПособий" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.СчетФактураНалоговыйАгент [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВозвратИзОтпускаПоУходуЗаРебенком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗаявкаНаКомандировку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОперацияПоЯндексКассе [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ОперацияПоЯндексКассе" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПачкаДокументовСПВ_2 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РасходныйКассовыйОрдер [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДвижениеПрочихАктивовПассивов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеАссортимента [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НачислениеДивидендов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КорректировкаЗадолженностиПоФинансовымИнструментам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВыгрузкаРегламентированныхОтчетов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УдержаниеДобровольныхВзносовВНПФ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ИзменениеСвойствНоменклатуры [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_ИзменениеСвойствНоменклатуры" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.КассовыйЧекКоррекции [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.КассовыйЧекКоррекции" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.LAD_ЗаявкаНаРасчетПоПроекту [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_ЗаявкаНаРасчетПоПроекту" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПоступлениеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_СозданиеЗапасаПоНовомуТовару [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_СозданиеЗапасаПоНовомуТовару" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.КонтролируемаяСделка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктОРасхожденияхПослеОтгрузки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВедомостьУплатыАДВ_11 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ПроектДоговора [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_ПроектДоговора" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УведомлениеОСписанииКиЗГИСМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РаспределениеПроизводственныхЗатрат [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_Телемаркетинг [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СчетФактураКомитента [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.СчетФактураКомитента" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.РегистрацияЗемельныхУчастков [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявлениеОПодтвержденииПраваНаЗачетАвансовПоНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПодготовкаКПередачеНМА [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПриходныйОрдерНаТовары [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_БонуснаяПрограммаДляПокупателей [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_БонуснаяПрограммаДляПокупателей" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПереоценкаОС2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КорректировкаПриобретения [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаданиеНаПеревозку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_СмешаннаяОплатаПокупателем [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_СмешаннаяОплатаПокупателем" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЛимитыРасходаДенежныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтзывСогласияНаОбработкуПерсональныхДанных [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ОтзывСогласияНаОбработкуПерсональныхДанных" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВедомостьПрочихДоходовВБанк [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УстановкаЦенНоменклатуры [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПрекращениеПодработки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УдержаниеПрофсоюзныхВзносов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.БольничныйЛист [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СборкаТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЕдиновременноеПособиеЗаСчетФСС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УведомлениеОПоступленииМаркированныхТоваровГИСМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеНМА2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеКвалификационногоРазряда [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ПроверкаЦенКонкурентов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_ПроверкаЦенКонкурентов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.toledo_РегистраторРасчетовОплаченнойПрибыли [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаказМатериаловВПроизводство [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОписьОДВ_1 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ОписьОДВ_1" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ДоходВНатуральнойФорме [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПередачаТоваровМеждуОрганизациями [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_Меню [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_Меню" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВедомостьПрочихДоходовВКассу [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПереоценкаНМА2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОписьПачекСЗВ_6 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_РасчетПоПлатномуХранениюТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВедомостьНаВыплатуЗарплатыПеречислением [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ФиксацияЛимитаДоставки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СправкиСПАРКРиски [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.СправкиСПАРКРиски" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ОрдерНаОтражениеПорчиТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СведенияОЗаработкеСтажеЗастрахованныхЛицСЗВ_ИСХ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.СведенияОЗаработкеСтажеЗастрахованныхЛицСЗВ_ИСХ" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.РаспределениеВозвратныхОтходов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ДоверенностьОтПокупателя [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РаспределениеНДС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_БюджетныйПланПродаж [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_БюджетныйПланПродаж" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.РеестрСчетовФактурПоставщика [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.РеестрСчетовФактурПоставщика" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.КорректировкаРеализации [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПоступлениеПредметовЛизинга [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтчетКомитенту [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПеремещениеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеЗатратНаВыпуск [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ТранспортнаяНакладная [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПланПродаж [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПланПродаж" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПланСборкиРазборки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПланСборкиРазборки" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВнутреннееПотреблениеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтпускБезСохраненияОплаты [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РаспределениеРасходовБудущихПериодов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_НеисполненнаяЗаявка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВосстановлениеНДСПоОбъектамНедвижимости [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ВосстановлениеНДСПоОбъектамНедвижимости" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИзменениеПлановыхНачислений [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_РезервированиеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтражениеРасхожденийПриИнкассацииДенежныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СчетФактураПолученный [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктВыполненныхРабот [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктОРасхожденияхПослеПриемки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПеремещениеМеждуТерриториями [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаписьКнигиПокупок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СторнированиеНачислений [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_АктРасчетаБонусаПремии" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЗаявлениеОВвозеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктСписанияЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_Взаимодействие [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаписьКУДиР [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СчетФактураКомиссионеру [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВозвратНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтпускаСотрудников [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КадровыйПереводСписком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СчетФактураНаНеподтвержденнуюРеализацию0 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ЗаявкаНаТехПоддержку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПерерасчетСтраховыхВзносов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПерерасчетСтраховыхВзносов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИнвентаризацияНаличныхДенежныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктПостановкиНаБалансЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_УстановкаЛимитовМенеджеров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НачислениеПоДоговорам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПоступлениеАрендованныхОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПередачаОСАрендатору [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПроизводствоБезЗаказа [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегламентнаяОперация [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗапросАкцизныхМарокЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПринятиеКУчетуОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СверкаВзаиморасчетов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаДокументовАДВ_2 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПланЗакупок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПланЗакупок" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.LAD_УстановкаИндивидуальныхСкидок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.Встреча [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ТТНВходящаяЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_СообщениеМессенджера [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.CRM_СообщениеМессенджера" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПринятиеКУчетуНМА2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ТелефонныйЗвонок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НормативРаспределенияПлановПродажПоКатегориям [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.НормативРаспределенияПлановПродажПоКатегориям" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.БронированиеГражданПребывающихВЗапасе [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗакрытиеЗапросовСписком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РаспоряжениеНаПеремещениеДенежныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаказПоставщику [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗапросНаВыпискуИзЕГРЮЛ_ЕГРИП" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПризПодарок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОрдерНаОтражениеИзлишковТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтпускПоУходуЗаРебенком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_СообщениеMajorTerminal [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрацияТранспортныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИсправлениеРазвернутогоСальдоТоваровОрганизаций [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РасчетСебестоимостиТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПеремещениеОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЛистКассовойКниги [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВводВыводДенежныхСредствПоНаправлению [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КомандировкиСотрудников [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СА_ДействияСоСканами [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НачислениеЗаПервуюПоловинуМесяца [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПриемНаРаботуСписком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.Увольнение [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаДокументовСЗВ_К [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаРазделов6РасчетаРСВ_1 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявкаНаВыпускКиЗГИСМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеГрафикаРаботыСписком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ПереводРезерваВСвободный [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПериодыОплаченныеДоНачалаЭксплуатации [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПоручениеЭкспедитору [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПисьмоОбменСБанками [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПисьмоОбменСБанками" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.КомпенсацияЗаЗадержкуЗарплаты [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОжидаемоеПоступлениеДенежныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АннулированиеПодарочныхСертификатов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДепонированиеЗарплаты [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтгрузкаТоваровСХранения [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтборРазмещениеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПрочиеДоходыРасходы [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РеализацияПодарочныхСертификатов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НачальнаяШтатнаяРасстановка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УведомлениеОЗачисленииВалюты [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УведомлениеОЗачисленииВалюты" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.toledo_КорректировкаВнутреннегоЗаказа [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УдалитьКассоваяСмена [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявлениеИЗапросВПФРОЗаработке [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗаявлениеИЗапросВПФРОЗаработке" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.КорректировкаВидаДеятельностиНДС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РаботаВВыходныеИПраздничныеДни [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ГрафикИсполненияДоговора [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ГрафикИсполненияДоговора" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИзменениеАванса [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрацияПрочихКонтролируемыхСделок [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.РегистрацияПрочихКонтролируемыхСделок" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВозвратСырьяОтПереработчика [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИнвентаризационнаяОпись [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗапросСмета [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПоясненияКДекларацииПоНДС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПоясненияКДекларацииПоНДС" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.АмортизацияНМА [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ОтветНаЗапрос [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВыплатаБывшимСотрудникам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтчетПоКомиссииМеждуОрганизациями [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПакетОбменСБанками [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОприходованиеИзлишковТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВнесениеДенежныхСредствВКассуККМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_ОтчетОРаботе [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.CRM_ОтчетОРаботе" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЭкземплярБюджета [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЭкземплярБюджета" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВыкупПринятыхНаХранениеТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УпаковочныйЛист [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УпаковочныйЛист" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ОтражениеЗарплатыВФинансовомУчете [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПрекращениеСтандартныхВычетовНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаписьКнигиПродаж [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПриемНаРаботу [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИндексацияЗаработка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИсходящаяТранспортнаяОперацияВЕТИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ИсходящаяТранспортнаяОперацияВЕТИС" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.КорректировкаНазначенияТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПодготовкаКПередачеОС2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаДокументовАДВ_1 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УведомлениеОПрекращенииОтпускаПоУходуЗаРебенком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВедомостьНаВыплатуЗарплатыВБанк [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаДокументовСЗВ_6_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УдалитьCRM_Сделка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_Претензия [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ХодатайствоОБронированииГражданПребывающихВЗапасе [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВводОстатковВнеоборотныхАктивов2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ФормированиеЗаписейРаздела7ДекларацииНДС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РеализацияТоваровУслуг [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПеремещениеОС2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ШтрафыЗаПДЗ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтчетПереработчика [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ПереводРезервовВСвободныйРезерв [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_ПереводРезервовВСвободныйРезерв" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.CRM_ШаблонЭтапаКалендарногоПлана [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктВыполненныхВнутреннихРабот [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗаявкаНаРазгрузкуПогрузку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УдалитьФормированиеСоставаБригады [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УдалитьФормированиеСоставаБригады" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.toledo_ЗаказОбеда [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВосстановлениеВДолжности [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОстаткиЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ОстаткиЕГАИС" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.LAD_РасходыИзПрофита [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_РасходыИзПрофита" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ОтменаБронированияГражданПребывающихВЗапасе [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_РеестрДокументов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеЗадолженности [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АктПроверкиСтраховыхВзносов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.АктПроверкиСтраховыхВзносов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИзменениеУсловийИсполнительногоЛиста [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЭлектронныйДокументИсходящий [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЭлектронныйДокументИсходящий" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПачкаДокументовСЗВ_6_3 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИсходящаяСправкаОЗаработкеДляРасчетаПособий [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_РассылкаЭлектронныхПисем [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегламентированныйОтчет [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.РегламентированныйОтчет" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ОтчетБанкаПоОперациямЭквайринга [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПроизводственнаяОперацияВЕТИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПроизводственнаяОперацияВЕТИС" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ТТНИсходящаяЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.МодернизацияОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.удалитьCRM_Мероприятие [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.удалитьCRM_Мероприятие" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПереоценкаОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.Анкета [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.Анкета" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПриобретениеТоваровУслуг [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОперацияНалоговогоУчетаПоНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НазначениеПлановогоНачисления [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НачислениеИСписаниеБонусныхБаллов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.НачислениеИСписаниеБонусныхБаллов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.НачисленияКредитовИДепозитов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_УстановкаЛимитовДоставки [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КнигаПокупокДляПередачиВЭлектронномВиде [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СправкаНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОплатаПоСреднемуЗаработку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВыбытиеАрендованныхОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявкаНаЗакрытиеЛицевыхСчетовСотрудников [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПересчетТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КассоваяСмена [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.КассоваяСмена" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.LAD_УстановкаЛимитовНаРазгрузку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВводНачальныхОстатковОтпусков [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗапросВФССОПроверкеРаботодателя [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗапросВФССОПроверкеРаботодателя" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.LAD_КорректировкаРезервовТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_КорректировкаРезервовТоваров" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.toledo_ПоступлениеТоваровНаПлатноеХранение [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_АнкетаПокупателя [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_АнкетаПокупателя" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЗапланированноеВзаимодействие [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтменаДоплатыДоСреднегоЗаработка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПриобретениеУслугПрочихАктивов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗаявкаНаДоставку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ОтсутствиеТовара [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрУчета [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.РегистрУчета" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УстановкаЗначенийНефинансовыхПоказателей [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УстановкаЗначенийНефинансовыхПоказателей" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.удалитьCRM_Планирование [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.удалитьCRM_Планирование" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ОтчетЕГАИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СписаниеОС2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеСостоянияОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрацияПрочихДоходов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_ПодтверждениеЗаказаПоставщику [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_ПодтверждениеЗаказаПоставщику" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗапросНаИнформационноеОбслуживаниеНалогоплательщика" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.Премия [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтгулСписком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗаявкаНаРегистрациюВнешнегоПользователя [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_ЗаявкаНаРегистрациюВнешнегоПользователя" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ДоверенностьВыданная [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтчетКомиссионера [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПеремаркировкаТоваровГИСМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПереводНаОплатуПоСреднемуЗаработку [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВыпускПродукции [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявлениеВФССОВозмещенииРасходовНаПогребение [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗаявлениеВФССОВозмещенииРасходовНаПогребение" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВозвратПодарочныхСертификатов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПеремещениеВДругоеПодразделение [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявлениеАбонентаСпецоператораСвязи [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗаявлениеАбонентаСпецоператораСвязи" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.LAD_МаршрутныйЛист [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.НазначениеОпросов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.НазначениеОпросов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПакетЭД [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.CRM_УстановкаИспользуемыхПоказателей [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.CRM_УстановкаИспользуемыхПоказателей" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ОбъединениеЗаписейСкладскогоЖурналаВЕТИС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ОбъединениеЗаписейСкладскогоЖурналаВЕТИС" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.КадровыйПеревод [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВедомостьНаВыплатуЗарплатыРаздатчиком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.КорректировкаОбособленногоУчетаЗапасов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВыработкаСотрудников [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ВыработкаСотрудников" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УведомлениеОВвозеМаркированныхТоваровИзЕАЭСГИСМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПриходныйКассовыйОрдер [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаДокументовСПВ_1 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВозвратТоваровОтКлиента [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОперацияПоПлатежнойКарте [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПрогулНеявка [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПриобретениеУслугПоЛизингу [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УвольнениеСписком [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_КорректировкаХарактеристикВРезервах [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДопЛистКнигиПродажДляПередачиВЭлектронномВиде [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЭлектронноеПисьмоИсходящее [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДоговорАвторскогоЗаказа [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РеестрСЗВ_6_2 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ДвижениеПродукцииИМатериалов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УведомлениеОСпецрежимахНалогообложения [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УведомлениеОСпецрежимахНалогообложения" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.НачислениеЗарплаты [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтчетОператораСистемыПлатон [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрацияНаработокТМЦВЭксплуатации [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаДокументовСЗВ_6_1 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИндивидуальныйГрафик [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявкаНаВозвратТоваровОтКлиента [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПодтверждениеЗачисленияЗарплаты [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПачкаДокументовАДВ_3 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ТаможеннаяДекларацияИмпорт [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.МаркировкаТоваровГИСМ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПодготовкаКПередачеНМА2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЧекККМВозврат [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_РасчетПоОтветственномуХранению [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_РасчетПоОтветственномуХранению" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ИзделияИЗатратыНЗП [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ИзделияИЗатратыНЗП" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.УведомлениеОПолучателеДокументов [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УведомлениеОПолучателеДокументов" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВозвратТоваровМеждуОрганизациями [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СА_ОперацияСДокументамиРеестра [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СправкаОПодтверждающихДокументах [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.БлокировкаВычетаНДС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗаявкаНаПриемНаРаботу [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_ЗаявкаНаПриемНаРаботу" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.toledo_СписаниеСвободногоРезерва [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.toledo_ЗаявкаНаВыдачуТовараСамовывозом [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.LAD_СогласованиеУсловийФУ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_СогласованиеУсловийФУ" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.АмортизацияНМА2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.АмортизацияНМА2_4" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПерерасчетНДФЛ [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистраторГрафикаДвиженияТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.РегистраторГрафикаДвиженияТоваров" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ПеремещениеНМА2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПеремещениеНМА2_4" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.LAD_ЗакрытиеЗаказовПоставщикам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.LAD_ЗакрытиеЗаказовПоставщикам" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ВыкупВозвратнойТарыКлиентом [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ИзменениеМестРаботы [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.АмортизацияОС [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОтменаРегистрацииТранспортныхСредств [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВозвратОСОтАрендатора2_4 [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОплатаДнейУходаЗаДетьмиИнвалидами [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОграничениеВзысканий [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ЗаданиеТорговомуПредставителю [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВыработкаНМА [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВходящаяСправкаОЗаработкеДляРасчетаПособий [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.РегистрацияПорядкаНалогообложенияПоНалогуНаИмущество [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ПланПроизводства [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.ПланПроизводства" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.ЗаказКлиента [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ОперацияБух [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ТабельУчетаРабочегоВремени [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.СообщениеОбменСБанками [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.СообщениеОбменСБанками" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.РасчетКурсовыхРазниц [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.УведомлениеОКонтролируемыхСделках [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.УведомлениеОКонтролируемыхСделках" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.toledo_ПланПродажПоПартнерам [Проверка периодичности нумерации документа] - <Данелия_Наталья>
 
  ОШИБКА:
[Failed] Переданный параметр (ложь) не является Истиной, а хотели, чтобы являлся.
У объекта "Документ.toledo_ПланПродажПоПартнерам" непериодическая нумерация.
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(332)}:ВызватьИсключение Префикс + " " + СообщениеОшибки;
{ВнешняяОбработка.БазовыеУтверждения.Форма.Форма.Форма(25)}:ВызватьОшибкуПроверки(СообщениеОшибки);
{ВнешняяОбработка.Тесты_ПроверкаПериодичностиНумерацииДокументов.Форма.Форма.Форма(137)}:Утверждения.Проверить(Результат = Истина, ТекстСообщения(ПолноеИмяМетаданных));
{(1)}:КонтекстВыполнения.ТестДолжен_ПроверитьПериодичностьНумерацииДокумента(Параметры[0]);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1075)}:Выполнить(ИсполняемыйКод);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(854)}:ВыполнитьПроцедуруКонтекста(КонтекстВыполнения, ЭлементДереваТестов.ИмяМетода, ЭлементДереваТестов.Параметры);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(838)}:РезультатТестирования = ВыполнитьТестовыйМетодНаКлиенте(КонтекстВыполнения, ЭлементДереваТестов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(710)}:ДочернийРезультатТестирования = ВыполнитьТестовыйМетод(КонтекстВыполнения, ДочернийУзел);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(694)}:ДочернийРезультатТестирования = ВыполнитьТесты(Загрузчик, ДочернийУзел, ФильтрДляДочернихУзлов, Подписчик, Родитель, ПараметрыПотоковыхОтчетов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1728)}:РезультатыТестирования = ВыполнитьТесты(Загрузчик, ДеревоТестовОтЗагрузчика);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1404)}:РезультатыТестирования = ЗагрузитьИВыполнитьТесты_ПакетныйРежим(ПараметрыЗапуска.Параметры_xddRun);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(1348)}:ВыполнитьПакетныйЗапускСинхронно(НастройкиШагов);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(88)}:ВыполнитьПакетныйЗапуск(ПараметрЗапуска);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(375)}:ПриОткрытииЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(368)}:ЗагрузкаПлагиновЗавершение();
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(332)}:ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагиновЗавершение(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(614)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, ПомещенныеФайлы);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(317)}:АСинк().смв_ПоместитьФайлы(ОписаниеЗавершения, ПомещаемыеФайлы);
{(1)}:ОписаниеОповещения.Модуль.ОбработчикПоискаКлиентскихПлагинов(Результат, ОписаниеОповещения.ДополнительныеПараметры)
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(205)}:Выполнить("ОписаниеОповещения.Модуль." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ОписаниеОповещения.ДополнительныеПараметры)");
{ВнешняяОбработка.xddTestRunner.Форма.МодульАсинк.Форма(991)}:смв_ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Результат);
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(270)}:АСинк().смв_НайтиФайлы(ОбработчикПоискаКлиентскихПлагинов,
{ВнешняяОбработка.xddTestRunner.Форма.УправляемаяФорма.Форма(71)}:ЗагрузитьПлагины();

  =======:
 
.    -->> тест Документ.СписаниеНедостачТоваров [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВедомостьНаВыплатуЗарплатыВКассу [Проверка периодичности нумерации документа] - <Данелия_Наталья>
.    -->> тест Документ.ВозвратМатериаловИзПроизводства [Проверка периодичности нумерации документа] - <Данелия_Наталья>
Сформирован отчет тестирования C:\Users\daneliya.n\ProjConf\out\smoke\allure.json
