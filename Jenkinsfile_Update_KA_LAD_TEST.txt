@Library("shared-libraries")
import io.libs.SqlUtils
import io.libs.ProjectHelpers
import io.libs.Utils

def sqlUtils = new SqlUtils()
def utils = new Utils()
def projectHelpers = new ProjectHelpers()

def updateDbTasks = [:]
pipeline {
    parameters {
        string(defaultValue: "${env.Server}", description: 'Сервер 1С', name: 'Server')
        string(defaultValue: "${env.ServerPort}", description: 'Порт сервера 1С', name: 'ServerPort')
        string(defaultValue: "${env.BaseName}", description: 'Имя базы данных', name: 'BaseName')
        string(defaultValue: "${env.UserName}", description: 'Имя пользователя', name: 'UserName')
        string(defaultValue: "${env.Pass}", description: 'Пароль', name: 'Pass')
        string(defaultValue: "${env.Uccode}", description: 'Код разблокировки', name: 'Uccode')        
        string(defaultValue: "${env.RasPort}", description: 'RAS', name: 'RasPort')
        string(defaultValue: "${env.PathRAC}", description: 'RAC', name: 'PathRAC')
        string(defaultValue: "${env.jenkinsAgent}", description: 'Нода дженкинса, на которой запускать пайплайн. По умолчанию master', name: 'jenkinsAgent')
    }

    environment {
       baseconnection ="/S${env.Server}:${env.ServerPort}\\${env.BaseName}"
       uccodeString ="--uccode ${env.Uccode}"
       path = "C:\\Program Files\\1cv8\\8.3.22.1704//bin//rac.exe"//"${env.PathRAC}"//
       pathtolog = "\\logs\\kill\\logs_kill.log"
       rasConnectionString ="--ras ${env.Server}:${env.RasPort} --db ${env.BaseName} --db-user ${env.UserName} --db-pwd ${env.Pass} ${uccodeString} --rac ${path} --debuglogfile ${WORKSPACE}${pathtolog}"        
       teststring="vrunner session kill --ras nn-1cdev-01:1545 --db ka_danelia --db-user Данелия_Наталья --db-pwd K*/7Vr9v7pdr --rac \"C:\\Program Files\\1cv8\\8.3.22.1704\""
      }

    agent {
        label "${(env.jenkinsAgent == null || env.jenkinsAgent == 'null') ? "master" : env.jenkinsAgent}"
    }
    options {
         timeout(time: 8, unit: 'HOURS') 
         buildDiscarder(logRotator(numToKeepStr:'10'))
         }
   
    stages {
            stage ('Принятие изменений') {
                    steps {
                          timestamps {
                            script {
                               // ConnString = projectHelpers.getConnString(Server, BaseName, ServerPort) 
                                echo "${rasConnectionString}"
                                //returnCode = utils.cmd("runner updatedb --settings tools/json/vrunner.json --ibconnection \"${ConnString}\" --db-user ${env.UserName} --db-pwd ${env.Pass}")
                                //returnCode = utils.cmd("runner session kill --settings tools/json/vrunner.json")
                                //cmd_m("vrunner session lock ${rasConnectionString}")   
                                //returnCode = utils.cmd("dsgedged")                             
                            //cmd("runner session kill ${rasConnectionString}")                           
                            //returnCode=utils.cmd("runner updatedb --ibconnection ${baseConnection} ${uccodeString}")
                            returnCode=utils.cmd("${teststring}")
                           
                            }
                         }
                    }
            }
    }
}
def cmd_m(command) {  
    def utils = new Utils()  
    stage("Команда") {
        timestamps {
            script{
                echo "gfdwgf"                               
                res= utils.cmd("рпарвпп")
                echo ${res}
                echo "${command}"
                bat "${command}"
            }
        }
    }
}        